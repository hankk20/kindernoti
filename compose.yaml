services:
  nginx:
    container_name: k-nginx
    image: 'nginx:1.25.1-alpine'
    restart: always
    volumes:
      - ./container/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api-gateway
  api-gateway:
    container_name: api-gateway
    restart: always
    hostname: apigateway
    ports:
      - 8090:8090
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    depends_on:
      - auth
  auth:
    container_name: auth
    restart: always
    hostname: auth-server
    ports:
      - 8091:8091
    build:
      context: .
      dockerfile: ./auth/Dockerfile
  mongodb:
    environment:
      - TZ=Asia/Seoul
    env_file:
      - ./container/env/mong.env
    image: 'mongo:7.0.2'
    command: --replSet rs0 --timeStampFormat iso8601-local  --auth --keyFile /docker-entrypoint-initdb.d/mongodb.key
    volumes:
      - ./container/mongo:/docker-entrypoint-initdb.d:ro
      - /local/data/mongo:/data/db
    ports:
      - '27020:27017'

  kafka:
    image: "bitnami/kafka:3.6.0"
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - TZ=Asia/Seoul
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_TLS_CLIENT_AUTH=none
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
volumes:
  kafka_data:
    driver: local