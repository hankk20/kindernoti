user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  64;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    client_max_body_size 100M;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    keepalive_timeout  65;

    #gzip  on;

    upstream keycloak {
       ip_hash;
       server auth.kindernoti.co.kr;
    }
    upstream apigateway {
           ip_hash;
           server api-gateway;
    }
    upstream swagger {
               ip_hash;
               server swagger;
        }

    include /etc/nginx/conf.d/*.conf;
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto https;
    proxy_set_header        X-Forwarded-Host  $host;
    proxy_set_header        X-Forwarded-Port  $server_port;

    server {
        listen                          80;
        server_name                     auth.kindernoti.co.kr;

        location /realms {
            proxy_pass http://keycloak;
        }
        location /admin/realms {
            proxy_pass http://keycloak;
        }

    }

    server {
        listen                          80;
        server_name                     kindernoti.co.kr;
        location /swagger {
            proxy_pass http://swagger;
        }
        location / {
            proxy_pass http://apigateway;
        }
    }
    server {
        listen                          80;
        server_name                     swagger.kindernoti.co.kr;

        location / {
            proxy_pass http://swagger;
        }
    }
}